###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2018. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################
{{- include "sch.config.init" (list . "ibm-wcd-redis.sch.chart.config.values") }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  # Pay attention to the redis-role label at runtime. The self-determination logic in the image sets this value accordingly.
  name: {{ include "sch.names.statefulSetName" (list . .sch.chart.components.server) | quote }}
  labels:
{{  include "sch.metadata.labels.standard" (list . .sch.chart.components.server) | indent 4 }}
spec:
  replicas: {{ .Values.replicas.servers }}
  selector:
    matchLabels:
{{  include "sch.metadata.labels.standard" (list . .sch.chart.components.server) | indent 6 }}
  serviceName: "{{ template "redis.fullname" . }}-server-svc"
  template:
    metadata:
      annotations:
        productID: RedisHA_406r0_free_00000
        productName: Redis HA
        productVersion: 3.2.12-r0
      labels:
{{ include "sch.metadata.labels.standard" (list . .sch.chart.components.server) | indent 8 }}
        redis-node: "true"
    spec:
      affinity:
{{- include "redis.nodeaffinity" . | indent 8 }}
      serviceAccountName: {{ template "redis-ha.serviceAccountName" . }}
{{- if include "redis.pullSecret" . }}
      imagePullSecrets:
      - name: {{ include "redis.pullSecret" . | quote }}
{{- end }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 8000
        fsGroup: 8000
      containers:
      - name: redis
        image: {{ include "redis.image.server" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote  }}
        securityContext:
          privileged: false
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 8000
          capabilities:
            drop:
            - ALL
        livenessProbe:
          initialDelaySeconds: {{ .Values.master.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.master.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.master.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.master.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.master.livenessProbe.failureThreshold }}
          exec:
            command:
            - redis-cli
            - ping
        readinessProbe:
          initialDelaySeconds: {{ .Values.master.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.master.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.master.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.master.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.master.readinessProbe.failureThreshold }}
          exec:
            command:
            - redis-cli
            - ping
        resources:
{{ toYaml .Values.resources.server | indent 10 }}
        env:
          - name: HELM_RELEASE
            value: {{ .Release.Name }}
          - name: REDIS_SENTINEL_SERVICE_HOST
            value: "redis-sentinel"
          - name: REDIS_PASSWORD
            value: {{ include "redis.password" . | quote }}
          - name: CACHE_MODE
            value: "{{ .Values.cachemode }}"
          - name: TIMEOUT
            value: "{{ .Values.timeout }}"
          - name: TCP_KEEPALIVE
            value: "{{ .Values.tcpKeepAlive }}"
          - name: LUA_TIME_LIMIT
            value: "{{ .Values.luaTimeLimit }}"
          - name: SLOW_LOG_SLOWER_THAN
            value: "{{ .Values.slowlogLogSlowerThan }}"
          - name: SLOW_LOG_MAX_LEN
            value: "{{ .Values.slowlogMaxLen }}"
          - name: APPENDONLY
            value: {{ .Values.appendonly | quote }}
          - name: NOTIFY_KEYSPACE_EVENTS
            value: '"{{ .Values.notifyKeyspaceEvents }}"'
          - name: PODIP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: REDIS_MASTER_SERVICE
            value: {{ include "sch.names.fullCompName" (list . .sch.chart.components.master) | quote }}
          - name: REDIS_MASTER_SERVICE_PORT
            value: "6379"
        ports:
          - containerPort: 6379
        volumeMounts:
          - mountPath: /home/appuser/redis-master-data
            name: data
      volumes:
      - name: data
{{- if .Values.persistence.enabled }}
  {{- if .Values.persistence.useDynamicProvisioning }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode | quote }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
    {{- if .Values.persistence.storageClassName }}
        storageClassName: {{ .Values.persistence.storageClassName | quote }}
    {{- else }}
        # Intentionally not specifying any storageClassName to use the storageClass marked as "(default)" in `kubectl get storageclasses`; i.e.,  not necessarily the one with name default.
    {{- end }}
  {{- else }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaimName }}
  {{- end }}
{{- else }}
        emptyDir: {}
{{- end }}

